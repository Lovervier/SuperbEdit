<Window x:Class="SuperbEdit.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Style="{StaticResource {x:Type Window}}"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:controls="clr-namespace:SuperbEdit.Controls"
        Icon="/SuperbEdit;component/Assets/icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="Header" Value="{Binding Path=Name}" />
                <Setter Property="ToolTip" Value="{Binding Path=Description}" />
                <Setter Property="ItemsSource" Value="{Binding Path=Items}" />
                <Setter Property="cal:Message.Attach" Value="[Event Click] = [Action Execute()]" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSeparator}" Value="true">
                        <Setter Property="MenuItem.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top" ItemContainerStyle="{StaticResource MenuItemStyle}" ItemsSource="{Binding MenuItems}">
            <!--<Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>-->
            <!--<MenuItem Header="Attach Back" x:Name="AttachBack" HorizontalAlignment="Right"
                      Visibility="{Binding IsSecondaryWindow, Converter={StaticResource booleanToVisibility}}" />-->
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem x:Name="Status">Ready</StatusBarItem>
        </StatusBar>
        <ContentControl x:Name="LeftPanel" MinWidth="150" DockPanel.Dock="Left" Width="200" />
        <controls:DockPanelSplitter DockPanel.Dock="Left" Width="4" Visibility="{Binding Visibility, ElementName=LeftPanel, Mode=OneWay}" />
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl Grid.Column="1" x:Name="CommandWindow" Visibility="Collapsed" Grid.Row="0"
                            Panel.ZIndex="1000" />
            <TabControl x:Name="Items" Grid.Row="0" Grid.ColumnSpan="3" >
                <TabControl.Template>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden" x:Name="scroll" Grid.Row="0"
                                          Grid.Column="0" VerticalScrollBarVisibility="Hidden">
                                <TabPanel x:Name="HeaderPanel"
                                          Panel.ZIndex="1"
                                          KeyboardNavigation.TabIndex="1"
                                          Margin="2,2,2,0"
                                          IsItemsHost="true" />
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}"  BasedOn="{StaticResource {x:Type ScrollViewer}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>
                            </ScrollViewer>
                            <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageLeftCommand" Grid.Row="0"
                                          Grid.Column="1" CommandTarget="{Binding ElementName=scroll}" Visibility="{Binding ElementName=scroll, Path=Visibility}"
                                          Style="{DynamicResource RepeatLeftButtonStyle}" />
                            <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageRightCommand"
                                          CommandTarget="{Binding ElementName=scroll}" Visibility="{Binding ElementName=scroll, Path=Visibility}" Grid.Row="0" Grid.Column="2"
                                          Style="{DynamicResource RepeatRightButtonStyle}" />
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent" Grid.Column="0" Grid.ColumnSpan="3"
                                              Grid.Row="1" />
                        </Grid>
                    </ControlTemplate>
                </TabControl.Template>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ContextMenu>
                                <ContextMenu Style="{StaticResource {x:Type ContextMenu}}">
                                    <MenuItem Header="Deatch" cal:Message.Attach="DetachItem($dataContext)" />
                                    <MenuItem Header="Close" cal:Message.Attach="CloseItem($dataContext)" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding DisplayName}" Grid.Column="0" />
                            <TextBlock Text="*" Grid.Column="1"
                                       Visibility="{Binding HasChanges, Converter={StaticResource booleanToVisibility}}" />
                            <TextBlock Text="&#10006;" Margin="5,0,0,0" Grid.Column="2">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <cal:ActionMessage MethodName="CloseItem">
                                            <cal:Parameter Value="$dataContext" />
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground"
                                                        Value="{StaticResource MouseOverForegroundBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>
        </Grid>

    </DockPanel>

</Window>