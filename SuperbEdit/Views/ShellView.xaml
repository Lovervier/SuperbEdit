<controls:SuperbWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:int="clr-namespace:System.Windows.Interactivity"
        xmlns:controls="clr-namespace:SuperbEdit.Controls"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:layout="clr-namespace:SuperbEdit.Layout"
        xmlns:Converters="clr-namespace:SuperbEdit.Converters" x:Class="SuperbEdit.Views.ShellView"
        Icon="/SuperbEdit;component/Assets/icon.ico" GlobalInputBindings="{Binding GlobalInputBindings}">
    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Converters:StringToKeyBinding x:Key="StringToKeyBinding"/>
            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="Header" Value="{Binding Name}" />
                <Setter Property="ToolTip" Value="{Binding Description}" />
                <Setter Property="InputGestureText" Value="{Binding Shortcut}" />
                <Setter Property="ItemsSource" Value="{Binding Items}" />
                <!-- Mattias: seems that actions are executed twice with the new implementation -->
                <!--<Setter Property="cal:Message.Attach" Value="[Event Click] = [Action ExecuteAction()]" />-->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <StaticResource ResourceKey="{x:Type Window}"/>
    </Window.Style>
    <DockPanel>
        <Menu DockPanel.Dock="Top" ItemContainerStyle="{StaticResource MenuItemStyle}" ItemsSource="{Binding MenuItems}">
            <!--<Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>-->
            <!--<MenuItem Header="Attach Back" x:Name="AttachBack" HorizontalAlignment="Right"
                      Visibility="{Binding IsSecondaryWindow, Converter={StaticResource booleanToVisibility}}" />-->
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem x:Name="Status" Content="Ready"/>
        </StatusBar>
        <!--<ContentControl x:Name="LeftPanel" MinWidth="150" DockPanel.Dock="Left" Width="200" />
        <controls:DockPanelSplitter DockPanel.Dock="Left" Width="4" Visibility="{Binding Visibility, ElementName=LeftPanel, Mode=OneWay}" />-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl Grid.Column="1" x:Name="CommandWindow" Visibility="Collapsed" Grid.Row="0"
				Panel.ZIndex="1000" />
            <avalonDock:DockingManager ActiveContent="{Binding ActiveItem, Mode=TwoWay}" AnchorablesSource="{Binding Panels}" DocumentsSource="{Binding Items}" x:Name="dockingManager" Grid.Row="0" Grid.ColumnSpan="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DocumentClosing">
                        <cal:ActionMessage MethodName="Close">
                            <cal:Parameter Value="$documentcontext" />
                            <cal:Parameter Value="$eventArgs" />
                        </cal:ActionMessage>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <i:Interaction.Behaviors>
                    <layout:LoadSaveLayoutBehaviour />
                </i:Interaction.Behaviors>
                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <layout:LayoutInitializer />
                </avalonDock:DockingManager.LayoutUpdateStrategy>
                <avalonDock:DockingManager.LayoutItemContainerStyle>
                    <Style TargetType="{x:Type avalonDock:LayoutItem}">
                        <Setter Property="Title" Value="{Binding Model.DisplayName}" />
                        <Setter Property="Visibility" Value="{Binding Model.Visible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                    </Style>
                </avalonDock:DockingManager.LayoutItemContainerStyle>
                <avalonDock:DockingManager.DocumentHeaderTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Content.DisplayName}" Grid.Column="0" />
                            <TextBlock Text="*" Grid.Column="1"
								Visibility="{Binding Content.HasChanges, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </DataTemplate>
                </avalonDock:DockingManager.DocumentHeaderTemplate>
                <avalonDock:DockingManager.LayoutItemTemplate>
                    <DataTemplate>
                        <ContentControl cal:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </avalonDock:DockingManager.LayoutItemTemplate>
                <avalonDock:DockingManager.Theme>
                    <avalonDock:ExpressionDarkTheme/>
                </avalonDock:DockingManager.Theme>
                <avalonDock:LayoutRoot>
                    <!--<avalonDock:LayoutPanel Orientation="Vertical">
                        <avalonDock:LayoutPanel Orientation="Horizontal">
                            <avalonDock:LayoutDocumentPane />
                        </avalonDock:LayoutPanel>
                    </avalonDock:LayoutPanel>-->
                </avalonDock:LayoutRoot>

            </avalonDock:DockingManager>
            <!--<TabControl x:Name="Items" Grid.Row="0" Grid.ColumnSpan="3" >
                <TabControl.Template>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden" x:Name="scroll" Grid.Row="0"
								Grid.Column="0" VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}"  BasedOn="{StaticResource {x:Type ScrollViewer}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType={x:Type TabControl}, Mode=FindAncestor}}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>
                                <TabPanel x:Name="HeaderPanel"
									Panel.ZIndex="1"
									KeyboardNavigation.TabIndex="1"
									Margin="2,2,2,0"
									IsItemsHost="true" />
                            </ScrollViewer>
                            <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageLeftCommand" Grid.Row="0"
								Grid.Column="1" CommandTarget="{Binding ElementName=scroll}" Visibility="{Binding Visibility, ElementName=scroll}"
								Style="{DynamicResource RepeatLeftButtonStyle}" />
                            <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageRightCommand"
								CommandTarget="{Binding ElementName=scroll}" Visibility="{Binding Visibility, ElementName=scroll}" Grid.Row="0" Grid.Column="2"
								Style="{DynamicResource RepeatRightButtonStyle}" />
                            <ContentPresenter x:Name="PART_SelectedContentHost"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Margin="{TemplateBinding Padding}"
								ContentSource="SelectedContent" Grid.Column="0" Grid.ColumnSpan="3"
								Grid.Row="1" />
                        </Grid>
                    </ControlTemplate>
                </TabControl.Template>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ContextMenu>
                                <ContextMenu Style="{StaticResource {x:Type ContextMenu}}">
                                    <MenuItem Header="Deatch" cal:Message.Attach="DetachItem($dataContext)" />
                                    <MenuItem Header="Close" cal:Message.Attach="CloseItem($dataContext)" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding DisplayName}" Grid.Column="0" />
                            <TextBlock Text="*" Grid.Column="1"
								Visibility="{Binding HasChanges, Converter={StaticResource booleanToVisibility}}" />
                            <TextBlock Text="✖" Margin="5,0,0,0" Grid.Column="2">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="MouseLeftButtonDown">
										<cal:ActionMessage MethodName="CloseItem">
											<cal:Parameter Value="$dataContext" />
										</cal:ActionMessage>
									</i:EventTrigger>
								</i:Interaction.Triggers>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground"
													Value="{StaticResource MouseOverForegroundBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>-->
        </Grid>

    </DockPanel>

</controls:SuperbWindow>