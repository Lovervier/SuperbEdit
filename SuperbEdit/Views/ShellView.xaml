<Window x:Class="SuperbEdit.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Style="{StaticResource {x:Type Window}}"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Icon="/SuperbEdit;component/Assets/icon.ico">

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="File">
                <MenuItem Header="New" x:Name="NewFile" />
                <MenuItem Header="New Window" x:Name="NewWindow" />
                <MenuItem Header="Open" x:Name="OpenFile" />
                <MenuItem Header="Open Folder" IsEnabled="False" />
                <Separator />
                <MenuItem Header="Save" x:Name="Save" />
                <MenuItem Header="Save As..." x:Name="SaveAs" />
                <MenuItem Header="Save All..." x:Name="SaveAll" />
                <Separator />
                <MenuItem Header="Close" x:Name="CloseActiveItem" />
                <Separator
                    Visibility="{Binding IsSecondaryWindow, Converter={StaticResource inverseBooleanToVisibility}}" />
                <MenuItem Header="Exit" x:Name="Exit"
                          Visibility="{Binding IsSecondaryWindow, Converter={StaticResource inverseBooleanToVisibility}}" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo" x:Name="Undo" />
                <MenuItem Header="Redo" x:Name="Redo" />
                <Separator />
                <MenuItem Header="Cut" x:Name="Cut" />
                <MenuItem Header="Copy" x:Name="Copy" />
                <MenuItem Header="Paste" x:Name="Paste" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Highlighters" cal:Action.TargetWithoutContext="{Binding}"
                          cal:Message.Attach="SetHighlighter($eventArgs)" x:Name="Highlighters" />
                <Separator />
                <MenuItem Header="Toggle FullScreen" x:Name="ToggleFullscreen" />
            </MenuItem>
            <MenuItem Header="Preferences">
                <MenuItem Header="Settings - User" x:Name="OpenUserConfig" />
                <MenuItem Header="Settings - Default" x:Name="OpenDefaultConfig" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" x:Name="About" />
            </MenuItem>
            <MenuItem Header="Attach Back" x:Name="AttachBack" HorizontalAlignment="Right"
                      Visibility="{Binding IsSecondaryWindow, Converter={StaticResource booleanToVisibility}}" />
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem x:Name="Status">Ready</StatusBarItem>
        </StatusBar>
        <TabControl x:Name="Items">
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" x:Name="scroll" Grid.Row="0"
                                      Grid.Column="0" VerticalScrollBarVisibility="Hidden">
                            <TabPanel x:Name="HeaderPanel"
                                      Panel.ZIndex="1"
                                      KeyboardNavigation.TabIndex="1"
                                      Margin="2,2,2,0"
                                      IsItemsHost="true" />
                        </ScrollViewer>
                        <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageLeftCommand" Grid.Row="0"
                                      Grid.Column="1" CommandTarget="{Binding ElementName=scroll}"
                                      Style="{DynamicResource RepeatLeftButtonStyle}" />
                        <RepeatButton VerticalAlignment="Bottom" Command="ScrollBar.PageRightCommand"
                                      CommandTarget="{Binding ElementName=scroll}" Grid.Row="0" Grid.Column="2"
                                      Style="{DynamicResource RepeatRightButtonStyle}" />
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="SelectedContent" Grid.Column="0" Grid.ColumnSpan="3"
                                          Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ContextMenu>
                            <ContextMenu Style="{StaticResource {x:Type ContextMenu}}">
                                <MenuItem Header="Deatch" cal:Message.Attach="DetachItem($dataContext)" />
                                <MenuItem Header="Close" cal:Message.Attach="CloseItem($dataContext)" />
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding DisplayName}" Grid.Column="0" />
                        <TextBlock Text="*" Grid.Column="1"
                                   Visibility="{Binding HasChanges, Converter={StaticResource booleanToVisibility}}" />
                        <TextBlock Text="&#10006;" Margin="5,0,0,0" Grid.Column="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <cal:ActionMessage MethodName="CloseItem">
                                        <cal:Parameter Value="$dataContext" />
                                    </cal:ActionMessage>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground"
                                                    Value="{StaticResource MouseOverForegroundBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>
    </DockPanel>

</Window>